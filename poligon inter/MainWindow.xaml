<Window x:Class="poligon_inter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:poligon_inter"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:view="clr-namespace:poligon_inter.View"
        xmlns:vm="clr-namespace:poligon_inter.ViewModel"
        xmlns:model="clr-namespace:poligon_inter.Model"
        d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="Poligon" 
        d:DesignWidth="600" d:DesignHeight="450"
        Height="{Binding Height, Mode=TwoWay}" Width="{Binding Width, Mode=TwoWay}"
        MinHeight="450" MinWidth="600"
        Top="{Binding Top, Mode=TwoWay}" Left="{Binding Left, Mode=TwoWay}"
        WindowState="{Binding CurMainWindowState, Mode=TwoWay}"
        Style="{StaticResource MaterialDesignWindow }" WindowStyle="None"
        >
    <Window.Resources>
        <ResourceDictionary>
            <view:IsSelectedFolderTreeConverter x:Key="IsSelectedFolderTreeConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0" CornerRadius="0" CaptionHeight="0" />
    </WindowChrome.WindowChrome>
    <i:Interaction.Triggers>
        <!-- zmieniłem podejście jest autozapis pozmianie, ale zostawiam na przyszłość-->
        <!--i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding onLoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding onClosedCommand}" />
        </i:EventTrigger-->
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:CallMethodAction MethodName="DragMove"
                           TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Border CornerRadius="5" BorderBrush="Gray" BorderThickness="2" Padding="6" Background="Transparent">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" MaxHeight="40"/> <!-- pasek tytułowy -->                
                <RowDefinition />                
            </Grid.RowDefinitions>
            <!--#region pasek Title Bar-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Grid.Row="0">
                <Viewbox Height="30">
                <Button x:Name="btnMin" FontFamily="Marlett" FontSize="20" Content="0"
                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                        BorderBrush="Transparent" Background="Transparent" Foreground="White" 
                    Command="{Binding onCmdMinCommand, Mode=OneWay}"
                    />
                </Viewbox>
                <!--Click="btnMin_Click"/-->
                <Viewbox Height="30">
                <Button x:Name="btnMax" FontFamily="Marlett" FontSize="20" Content="{Binding ContentMax, Mode=OneWay}" 
                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                        BorderBrush="Transparent" Background="Transparent" Foreground="White" 
                    Command="{Binding onCmdMaxCommand, Mode=OneWay}" />
                </Viewbox>
                <!--Click="btnMax_Click"/-->
                <Viewbox Height="30">
                    <Button x:Name="btnClouse" FontFamily="Marlett" FontSize="20" Content="r" 
                            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            BorderBrush="Transparent" Background="Transparent" Foreground="White" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:CallMethodAction MethodName="Close"
                               TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Viewbox>

            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="left"  Grid.Row="0">
                <!-- tu będzie ikona o ile ją dodam-->
                <!--Image HorizontalAlignment="Left" Height="32"    Width="32"  Source="/resources/ico/Icon1.ico" /-->
                <Label x:Name="WindowHeader" Content="Poligon Testowy"    />

            </StackPanel>
            <!--#endregion-->
            <md:DialogHost Grid.Row=" 1" IsOpen="{Binding IsDialogOpen}" 
                      DialogContentUniformCornerRadius="20"
                      DialogTheme="Inherit" Identifier="RootDialog">

                <Grid Cursor="" >

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToolBar  DockPanel.Dock="Top" Grid.Row="0" >
                        <Button  x:Name="NweDB" Command="{Binding CreateDBCommand}">
                            <md:PackIcon Kind="DatabasePlus" />
                        </Button>
                        <Button x:Name="AddFolder" Command="{Binding AddFolderCommand}"
                                >
                            <md:PackIcon Kind="FolderPlusOutline" />
                            <!-- styl powoduje że przyciski są niebieskie ??-->
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                    <Setter Property="IsEnabled" 
                                Value="{Binding LActiveTreeModelItem, Converter={StaticResource IsSelectedFolderTreeConverter}}"/>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="AddFolder2" Click="AddFolder_Click">
                            <md:PackIcon Kind="FolderPlusOutline" />
                        </Button>
                        <Button  x:Name="AddFile" Command="{Binding AddFileCommand}">
                            <md:PackIcon Kind="FilePlus" />
                        </Button>

                    </ToolBar>


                    <Grid Grid.Row=" 1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <!--ColumnDefinition Width="5" />-->
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Expander Grid.Column="0" ExpandDirection="Left" x:Name="Expand"
                              IsExpanded="{Binding ExtenderIsExpanded}" >
                            <!--Expander.Header>
                            <TextBlock RenderTransformOrigin=".5,.5" Text="Bazy danych">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                         </Expander.Header-->

                            <TreeView  x:Name="Tree"   ItemsSource="{Binding Tree}">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate DataType="{x:Type model:TreeModel}" ItemsSource="{Binding Children}" >
                                        <StackPanel>
                                            <TextBlock Text="{Binding Name}" Foreground="White"/>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseRightButtonDown" >
                                                    <!--i:CallMethodAction TargetObject="{Binding}" MethodName="KlikRightCommand"/-->
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                        AncestorType={x:Type Window}}, Path=DataContext.TreeModelRBMClickCommand}" 
                                                    CommandParameter="{Binding}"  />
                                                    <!--i:ChangePropertyAction PropertyName="{Binding IsRightSelected}" Value="true" /-->
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeftButtonDown" >
                                                    <!-- dodać previewM ...  -->
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                        AncestorType={x:Type Window}}, Path=DataContext.TreeModelLBMClickCommand}" 
                                                        CommandParameter="{Binding}"  />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                                <TreeView.ItemContainerStyle >
                                    <Style TargetType="TreeViewItem">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.ContextMenu>
                                    <ContextMenu >
                                        <!-- z dodawanie i usuwanie kategorii głównych powinno być zabezpieczone-->
                                        <!-- może później zrobiedynamiczne menu  to jakoś to ogarnę-->
                                        <MenuItem Header="Dodaj"  Command="{Binding AddFolderCommand}">
                                            <MenuItem.Icon>
                                                <md:PackIcon Kind="PlusThick" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Usuń" Command="{Binding RemoveFolderCommand}">
                                            <MenuItem.Icon>
                                                <md:PackIcon Kind="Close" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Zmień nazwę" >
                                            <MenuItem.Icon>
                                                <md:PackIcon Kind="Rename" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                    <!--ContextMenu   ItemsSource="{Binding TVCommandList , Mode=OneTime}"-->
                                    <!--ContextMenu x:Name="CMTree"  ItemsSource="{Binding TVCommandList}" DisplayMemberPath="Displayname">
                                    <ContextMenu.Resources>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding MyContextMenuCommand}" />
                                        </Style>
                                    </ContextMenu.Resources>
                                </ContextMenu>-->
                                </TreeView.ContextMenu>
                            </TreeView>
                        </Expander>
                        <!-- GridSpliter w tym miejscu powoduje problemy-->
                        <!--GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Cursor="SizeWE"  /-->
                        <!--#region  tabcontrol -->
                        <!--TabControl TabStripPlacement="Left">

                <TabControl.Template>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer 
                                HorizontalScrollBarVisibility="Disabled"  
                                VerticalScrollBarVisibility="Auto" 
                                FlowDirection="RightToLeft">
                                <TabPanel 
                                    x:Name="HeaderPanel"
                                    Panel.ZIndex ="0" 
                                    KeyboardNavigation.TabIndex="1"
                                    IsItemsHost="true"
                                />
                            </ScrollViewer>
                        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                        <ScrollViewer 
                                HorizontalScrollBarVisibility="auto"  
                                VerticalScrollBarVisibility="Auto"
                            Grid.Column="2"
                            >
                            
                            <ContentPresenter 
                                x:Name="PART_SelectedContentHost"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ContentSource="SelectedContent" 
                            />
                        </ScrollViewer>
                    </Grid>
                    </ControlTemplate>
                </TabControl.Template>


                <TabItem Header="pliki" Cursor="" >
                    <StackPanel HorizontalAlignment = "left" >
                    <WrapPanel>
                        <TextBlock Text="light" />
                        
                        <Viewbox Height="10" Margin="6">
                            <ToggleButton IsChecked="True"
                            Style="{StaticResource MaterialDesignSwitchSecondaryToggleButton}"
                            ToolTip="MaterialDesignSwitchSecondaryToggleButton" 
                                   
                                  x:Name="DarkModeToggleButton"
                                          />
                        </Viewbox>
                        <TextBlock Text="dark" />
                    </WrapPanel>
                    <Viewbox Height="15" Cursor="">
                            <ToggleButton x:Name = "tb" Margin = "6"
                              Style="{StaticResource MaterialDesignSwitchToggleButton}"
                            HorizontalAlignment = "left" >
                                <md:PackIcon Kind="Pin" Width = "21" Height="21"
                                   RenderTransformOrigin=".5,.5" >
                                    <md:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45"  />
                                    </md:PackIcon.RenderTransform>
                                </md:PackIcon>
                                <md:ToggleButtonAssist.OnContent>
                                    <md:PackIcon Kind="Pin" />
                                </md:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </Viewbox>
                        <Viewbox Height="20" Cursor="">
                            <ToggleButton  Margin = "6"
                              Style="{StaticResource MaterialDesignSwitchToggleButton}"
                            HorizontalAlignment = "left" >
                                <md:PackIcon Kind="Pin" Width = "21" Height="21"
                                   RenderTransformOrigin=".5,.5" >
                                    <md:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45"  />
                                    </md:PackIcon.RenderTransform>
                                </md:PackIcon>
                                <md:ToggleButtonAssist.OnContent>
                                    <md:PackIcon Kind="Pin" />
                                </md:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </Viewbox>
                        <Viewbox Height="25" Cursor="">
                            <ToggleButton  Margin = "6"
                              Style="{StaticResource MaterialDesignSwitchToggleButton}"
                            HorizontalAlignment = "left" >
                                <md:PackIcon Kind="Pin" Width = "21" Height="21"
                                   RenderTransformOrigin=".5,.5" >
                                    <md:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45"  />
                                    </md:PackIcon.RenderTransform>
                                </md:PackIcon>
                                <md:ToggleButtonAssist.OnContent>
                                    <md:PackIcon Kind="Pin" />
                                </md:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </Viewbox>
                        <ToggleButton
                          IsChecked="True"
                          Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"
                          ToolTip="MaterialDesignSwitchDarkToggleButton" HorizontalAlignment = "left"
                          />
                        
                        <ToggleButton Content="C"
                              IsChecked="True"
                              Style="{StaticResource MaterialDesignActionSecondaryToggleButton}"
                        ToolTip="MaterialDesignActionSecondaryToggleButton" />
                        <ToggleButton Content="{md:PackIcon Kind=Heart, Size=21}"
                            IsChecked="True"
                            Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                            ToolTip="MaterialDesignFlatPrimaryToggleButton" />
                        <ToggleButton Width="60"
                        Style="{StaticResource MaterialDesignSwitchToggleButton}"
                        ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                            <md:ToggleButtonAssist.SwitchTrackOnBackground>
                                <SolidColorBrush Color="Green" />
                            </md:ToggleButtonAssist.SwitchTrackOnBackground>

                            <md:ToggleButtonAssist.SwitchTrackOffBackground>
                                <SolidColorBrush Color="Red" />
                            </md:ToggleButtonAssist.SwitchTrackOffBackground>
                        </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                    <ToggleButton Width="60"
Style="{StaticResource MaterialDesignSwitchToggleButton}"
ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                        <md:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="Green" />
                        </md:ToggleButtonAssist.SwitchTrackOnBackground>

                        <md:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="Red" />
                        </md:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>
                </StackPanel>
                </TabItem>
                <TabItem Header="filmy">
                    <TextBlock Text="jakieś cos" />
                </TabItem>
                <TabItem Header="kategorie">
                    <TextBlock Text="jakieś cos" />
                </TabItem>
                <TabItem Header="kategorie">
                    <TextBlock Text="jakieś cos" />
                </TabItem>

            </TabControl>-->
                        <!--#endregion-->
                        <ContentControl Grid.Column="1" x:Name="Pages"  Content="{Binding SelectedViewModel}"/>

                    </Grid>
                </Grid>
            </md:DialogHost>

        </Grid>
    </Border>
</Window>
